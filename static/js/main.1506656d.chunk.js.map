{"version":3,"sources":["routes.js","components/Navigation/UserMenu.js","redux/status/statusSelectors.js","components/Navigation/PublicMenu.js","components/Navigation/Navigation.js","components/Layout.js","components/PublicRoutes.js","components/PrivateRoutes.js","components/AlertPage/ErrorMessage.js","App.js","redux/contacts/contactsReducer.js","redux/status/statusReducer.js","redux/store.js","index.js","redux/status/statusActions.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js"],"names":["connect","state","user","getUserInfo","Nav","variant","defaultActiveKey","className","Link","eventKey","disabled","name","email","Item","to","routes","Spinner","animation","getStatusLogOn","status","logOn","getStatusRemember","remember","PublicMenu","Layout","children","Component","component","redirectTo","routeProps","render","props","restricted","ErrorMessage","error","Alert","Heading","StartPage","lazy","UserPage","LoginPage","RegistrationPage","ContactList","LogOut","mapDispatchToProps","getUser","registrationError","setToken","token","getUserToken","message","getErrorMessage","useLocalStorage","value","setValue","useEffect","setTimeout","fallback","path","exact","PublicRoutes","PrivateRoutes","initialState","contacts","filter","contactsReducer","createReducer","registrationSuccess","action","payload","loginSuccess","loginError","getUserSuccess","getUserError","logoutSuccess","logoutError","addContactsSuccess","getContactsSuccess","addContactsError","getContactsError","removeContactsSuccess","contact","id","removeContactsError","getFilterValue","statusReducer","statusLogOn","statusRemember","store","configureStore","reducer","userBook","middleware","getDefaultMiddleware","ReactDOM","document","getElementById","createAction","getUserContacts","getContactsFilter","registrationRequest","loginRequest","getUserRequest","logoutRequest","addContactsRequest","getContactsRequest","removeContactsRequest","axios","defaults","baseURL","tokenSet","headers","common","Authorization","registrationUser","dispatch","post","then","response","data","catch","loginUser","get","logoutUser","addUserContact","getContacts","removeContact","delete"],"mappings":"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","file":"static/js/main.1506656d.chunk.js","sourcesContent":["export default {\r\n  home: \"/\",\r\n  login: \"/login\",\r\n  register: \"/registration\",\r\n  contacts: \"/contacts\",\r\n  logout: \"/logout\",\r\n};\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport routes from \"../../routes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { getUserInfo } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nfunction UserMenu({ user }) {\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <Spinner animation=\"border\" />\r\n      ) : (\r\n        <Nav\r\n          variant=\"tabs\"\r\n          defaultActiveKey=\"/home\"\r\n          className=\"justify-content-end\"\r\n        >\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            Hello {user.name}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            Email: {user.email}\r\n          </Nav.Link>\r\n          <Nav.Item>\r\n            <Link to={routes.logout} className=\"nav-link\">\r\n              Log out\r\n            </Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Link to={routes.contacts} className=\"nav-link\">\r\n              Contacts\r\n            </Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: getUserInfo(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(UserMenu);\r\n","const getStatusLogOn = (state) => state.status.logOn;\r\nconst getStatusRemember = (state) => state.status.remember;\r\n\r\nexport { getStatusLogOn, getStatusRemember };\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport routes from \"../../routes\";\r\n\r\nfunction PublicMenu() {\r\n  return (\r\n    <Nav\r\n      variant=\"tabs\"\r\n      defaultActiveKey=\"/home\"\r\n      className=\"justify-content-end\"\r\n    >\r\n      <Nav.Item>\r\n        <Link to={routes.login} className=\"nav-link\">\r\n          Login\r\n        </Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Link to={routes.register} className=\"nav-link\">\r\n          Registration\r\n        </Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default PublicMenu;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport routes from \"../../routes\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../../redux/status/statusSelectors\";\r\nimport PublicMenu from \"./PublicMenu\";\r\n\r\nfunction Navigation({ logOn }) {\r\n  return (\r\n    <>\r\n      <Nav\r\n        variant=\"tabs\"\r\n        defaultActiveKey=\"/home\"\r\n        className=\"justify-content-end\"\r\n      >\r\n        <Nav.Item>\r\n          <Link to={routes.home} className=\"nav-link\">\r\n            Home Page\r\n          </Link>\r\n        </Nav.Item>\r\n        {logOn ? <UserMenu /> : <PublicMenu />}\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    logOn: getStatusLogOn(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navigation);\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Navigation />\r\n    <main>{children}</main>\r\n  </>\r\n);\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../redux/status/statusSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  logOn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      logOn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logOn: getStatusLogOn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../redux/status/statusSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  logOn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      logOn ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logOn: getStatusLogOn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction ErrorMessage({ error }) {\r\n  return (\r\n    <Alert variant=\"danger\">\r\n      <Alert.Heading>Samsing wrong!</Alert.Heading>\r\n      <p>{error}</p>\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport routes from \"./routes\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserToken,\n  getErrorMessage,\n} from \"./redux/contacts/contactsSelectors\";\nimport { getUser } from \"./redux/contacts/contactsOperations\";\nimport { registrationError, setToken } from \"./redux/contacts/contactsActions\";\nimport {\n  getStatusLogOn,\n  getStatusRemember,\n} from \"./redux/status/statusSelectors\";\nimport PublicRoutes from \"./components/PublicRoutes\";\nimport PrivateRoutes from \"./components/PrivateRoutes\";\nimport ErrorMessage from \"./components/AlertPage/ErrorMessage\";\nimport { useLocalStorage } from \"react-use\";\n\nconst StartPage = lazy(() => import(\"./components/HomePage/StartPage\"));\nconst UserPage = lazy(() => import(\"./components/HomePage/UserPage\"));\nconst LoginPage = lazy(() => import(\"./components/LoginPage/LoginPage\"));\nconst RegistrationPage = lazy(() =>\n  import(\"./components/RegistrationPage/RegistrationPage\")\n);\nconst ContactList = lazy(() => import(\"./components/Contacts/ContactList\"));\nconst LogOut = lazy(() => import(\"./components/AlertPage/LogOut\"));\n\nfunction App({\n  logOn,\n  message,\n  getUser,\n  token,\n  registrationError,\n  setToken,\n  remember,\n}) {\n  const [value, setValue] = useLocalStorage(\"token\");\n\n  useEffect(() => {\n    setToken(value);\n    getUser(value);\n  }, [getUser, value, setToken]);\n\n  useEffect(() => {\n    if (remember) {\n      setValue(token);\n    }\n  }, [token, setValue, remember]);\n\n  useEffect(() => {\n    if (message) {\n      setTimeout(() => {\n        registrationError(null);\n      }, 3000);\n    }\n  });\n  return (\n    <>\n      <Layout>\n        <Suspense\n          fallback={\n            <div>\n              <Spinner animation=\"border\" />\n            </div>\n          }\n        >\n          <Switch>\n            <Route\n              path={routes.home}\n              exact\n              component={logOn ? UserPage : StartPage}\n            />\n            <PublicRoutes\n              path={routes.home}\n              exact\n              restricted\n              redirectTo={routes.contacts}\n              component={logOn ? UserPage : StartPage}\n            />\n            <PublicRoutes\n              path={routes.login}\n              restricted\n              redirectTo={routes.home}\n              component={LoginPage}\n            />\n            <PublicRoutes\n              path={routes.register}\n              restricted\n              redirectTo={routes.home}\n              component={RegistrationPage}\n            />\n            <PrivateRoutes\n              path={routes.contacts}\n              redirectTo={routes.login}\n              component={ContactList}\n            />\n            <PrivateRoutes\n              path={routes.logout}\n              redirectTo={routes.login}\n              component={LogOut}\n            />\n            <Redirect to={routes.home} />\n          </Switch>\n        </Suspense>\n      </Layout>\n      {message && <ErrorMessage error={message} />}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: getUserToken(state),\n    logOn: getStatusLogOn(state),\n    message: getErrorMessage(state),\n    remember: getStatusRemember(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  getUser,\n  registrationError,\n  setToken,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  registrationSuccess,\r\n  loginSuccess,\r\n  getUserSuccess,\r\n  logoutSuccess,\r\n  registrationError,\r\n  loginError,\r\n  getUserError,\r\n  logoutError,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n  setToken,\r\n} from \"../contacts/contactsActions\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  contacts: [],\r\n  error: null,\r\n  filter: \"\",\r\n};\r\n\r\nconst contactsReducer = createReducer(\r\n  { user: null, token: null, contacts: [], error: null, filter: \"\" },\r\n  {\r\n    [registrationSuccess]: (state, action) => ({\r\n      ...state,\r\n      ...action.payload,\r\n    }),\r\n    [registrationError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [loginSuccess]: (state, action) => ({ ...state, ...action.payload }),\r\n    [loginError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [getUserSuccess]: (state, action) => ({\r\n      ...state,\r\n      user: action.payload,\r\n    }),\r\n    [getUserError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [logoutSuccess]: (state, action) => ({\r\n      ...initialState,\r\n      token: action.payload,\r\n    }),\r\n    [logoutError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [addContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: [...state.contacts, action.payload],\r\n    }),\r\n    [getContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: action.payload,\r\n    }),\r\n    [addContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [getContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [removeContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: [\r\n        ...state.contacts.filter((contact) => {\r\n          return contact.id !== action.payload;\r\n        }),\r\n      ],\r\n    }),\r\n    [removeContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [getFilterValue]: (state, action) => ({\r\n      ...state,\r\n      filter: action.payload,\r\n    }),\r\n    [setToken]: (state, action) => ({\r\n      ...state,\r\n      token: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { statusLogOn, statusRemember } from \"../status/statusActions\";\r\n\r\nconst statusReducer = createReducer(\r\n  { logOn: false, remember: false },\r\n  {\r\n    [statusLogOn]: (state, action) => ({\r\n      ...state,\r\n      logOn: action.payload,\r\n    }),\r\n    [statusRemember]: (state, action) => ({\r\n      ...state,\r\n      remember: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default statusReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport statusReducer from \"./status/statusReducer\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    userBook: contactsReducer,\r\n    status: statusReducer,\r\n  },\r\n  middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst statusLogOn = createAction(\"CHENGE_STATUS_LOGON\");\r\nconst statusRemember = createAction(\"CHENGE_STATUS_REMEMBER\");\r\n\r\nexport { statusLogOn, statusRemember };\r\n","const getUserToken = (state) => state.userBook.token;\r\nconst getUserInfo = (state) => state.userBook.user;\r\nconst getUserContacts = (state) => state.userBook.contacts;\r\nconst getContactsFilter = (state) => state.userBook.filter;\r\nconst getErrorMessage = (state) => state.userBook.error;\r\n\r\nexport {\r\n  getUserToken,\r\n  getUserInfo,\r\n  getUserContacts,\r\n  getContactsFilter,\r\n  getErrorMessage,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// User Action\r\n\r\nconst registrationRequest = createAction(\"userBook/registrationRequest\");\r\nconst registrationSuccess = createAction(\"userBook/registrationSuccess\");\r\nconst registrationError = createAction(\"userBook/registrationError\");\r\n\r\nconst loginRequest = createAction(\"userBook/loginRequest\");\r\nconst loginSuccess = createAction(\"userBook/loginSuccess\");\r\nconst loginError = createAction(\"userBook/loginError\");\r\n\r\nconst getUserRequest = createAction(\"userBook/getUserRequest\");\r\nconst getUserSuccess = createAction(\"userBook/getUserSuccess\");\r\nconst getUserError = createAction(\"userBook/getUserError\");\r\n\r\nconst logoutRequest = createAction(\"userBook/logoutRequest\");\r\nconst logoutSuccess = createAction(\"userBook/logoutSuccess\");\r\nconst logoutError = createAction(\"userBook/logoutError\");\r\n\r\nconst setToken = createAction(\"userBook/setToken\");\r\n\r\n// Contacts Action\r\n\r\nconst addContactsRequest = createAction(\"userBook/addRequest\");\r\nconst addContactsSuccess = createAction(\"userBook/addSuccess\");\r\nconst addContactsError = createAction(\"userBook/addError\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst getFilterValue = createAction(\"FILTER_ITEM\");\r\n\r\nexport {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n  setToken,\r\n};\r\n","import {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contactsActions\";\r\nimport { statusLogOn, statusRemember } from \"../status/statusActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\n// axios.defaults.baseURL = \"https://lpj-tasker.herokuapp.com\";\r\n\r\nconst tokenSet = (token) =>\r\n  (axios.defaults.headers.common.Authorization = `Bearer ${token}`);\r\nconst tokenUnset = () => (axios.defaults.headers.common.Authorization = \"\");\r\n\r\nconst registrationUser = (user) => (dispatch) => {\r\n  dispatch(registrationRequest());\r\n  axios\r\n    .post(\"/users/signup\", user)\r\n    .then((response) => {\r\n      tokenSet(response.data.token);\r\n      dispatch(statusLogOn(true));\r\n      dispatch(registrationSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(registrationError(error.message)));\r\n};\r\n\r\nconst loginUser = (user) => (dispatch) => {\r\n  dispatch(loginRequest());\r\n  axios\r\n    .post(\"/users/login\", user)\r\n    .then((response) => {\r\n      tokenSet(response.data.token);\r\n      dispatch(statusLogOn(true));\r\n      dispatch(loginSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(loginError(error.message)));\r\n};\r\n\r\nconst getUser = (token) => (dispatch) => {\r\n  if (!token) {\r\n    dispatch(statusLogOn(false));\r\n    return;\r\n  }\r\n  tokenSet(token);\r\n  dispatch(statusLogOn(true));\r\n  dispatch(getUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then((response) => {\r\n      dispatch(getUserSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(getUserError(error.message)));\r\n};\r\n\r\nconst logoutUser = () => (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      tokenUnset();\r\n      dispatch(statusLogOn(false));\r\n      dispatch(statusRemember(false));\r\n      dispatch(logoutSuccess(null));\r\n    })\r\n    .catch((error) => dispatch(logoutError(error.message)));\r\n};\r\n\r\nconst addUserContact = (contact) => (dispatch) => {\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst getContacts = (token) => (dispatch) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  tokenSet(token);\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then((response) => {\r\n      dispatch(getContactsSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error.message)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactsSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactsError(error.message)));\r\n};\r\n\r\nexport {\r\n  registrationUser,\r\n  loginUser,\r\n  getUser,\r\n  logoutUser,\r\n  addUserContact,\r\n  getContacts,\r\n  removeContact,\r\n};\r\n"],"sourceRoot":""}