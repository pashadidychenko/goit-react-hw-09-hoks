{"version":3,"sources":["routes.js","components/Navigation/UserMenu.js","redux/status/statusSelectors.js","components/Navigation/PublicMenu.js","components/Navigation/Navigation.js","components/Layout.js","components/PublicRoutes.js","components/PrivateRoutes.js","components/AlertPage/ErrorMessage.js","App.js","redux/contacts/contactsReducer.js","redux/status/statusReducer.js","redux/store.js","index.js","redux/status/statusActions.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js"],"names":["connect","state","user","getUserInfo","Nav","variant","defaultActiveKey","className","Link","eventKey","disabled","name","email","Item","to","routes","Spinner","animation","getStatusLogOn","status","logOn","PublicMenu","props","Layout","children","Component","component","redirectTo","routeProps","render","restricted","ErrorMessage","error","Alert","Heading","StartPage","lazy","UserPage","LoginPage","RegistrationPage","ContactList","LogOut","App","this","getUser","token","message","setTimeout","registrationError","fallback","path","exact","PublicRoutes","PrivateRoutes","mapDispatchToProps","getUserToken","getErrorMessage","initialState","contacts","filter","contactsReducer","createReducer","registrationSuccess","action","payload","loginSuccess","loginError","getUserSuccess","getUserError","logoutSuccess","logoutError","addContactsSuccess","getContactsSuccess","addContactsError","getContactsError","removeContactsSuccess","contact","id","removeContactsError","getFilterValue","statusReducer","remember","statusLogOn","statusRemember","userBookConfig","key","storage","whitelist","statusConfig","store","configureStore","reducer","userBook","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","createAction","getUserContacts","getContactsFilter","registrationRequest","loginRequest","getUserRequest","logoutRequest","addContactsRequest","getContactsRequest","removeContactsRequest","axios","defaults","baseURL","tokenSet","headers","common","Authorization","registrationUser","dispatch","post","then","response","data","catch","loginUser","get","logoutUser","addUserContact","getContacts","removeContact","delete"],"mappings":"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","file":"static/js/main.0178015d.chunk.js","sourcesContent":["export default {\r\n  home: \"/\",\r\n  login: \"/login\",\r\n  register: \"/registration\",\r\n  contacts: \"/contacts\",\r\n  logout: \"/logout\",\r\n};\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport routes from \"../../routes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { getUserInfo } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nfunction UserMenu({ user }) {\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <Spinner animation=\"border\" />\r\n      ) : (\r\n        <Nav\r\n          variant=\"tabs\"\r\n          defaultActiveKey=\"/home\"\r\n          className=\"justify-content-end\"\r\n        >\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            Hello {user.name}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"disabled\" disabled>\r\n            Email: {user.email}\r\n          </Nav.Link>\r\n          <Nav.Item>\r\n            <Link to={routes.logout} className=\"nav-link\">\r\n              Log out\r\n            </Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Link to={routes.contacts} className=\"nav-link\">\r\n              Contacts\r\n            </Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: getUserInfo(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(UserMenu);\r\n","const getStatusLogOn = (state) => state.status.logOn;\r\nconst getStatusRemember = (state) => state.status.remember;\r\n\r\nexport { getStatusLogOn, getStatusRemember };\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport routes from \"../../routes\";\r\n\r\nfunction PublicMenu({ user }) {\r\n  return (\r\n    <Nav\r\n      variant=\"tabs\"\r\n      defaultActiveKey=\"/home\"\r\n      className=\"justify-content-end\"\r\n    >\r\n      <Nav.Item>\r\n        <Link to={routes.login} className=\"nav-link\">\r\n          Login\r\n        </Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Link to={routes.register} className=\"nav-link\">\r\n          Registration\r\n        </Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default PublicMenu;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport routes from \"../../routes\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../../redux/status/statusSelectors\";\r\nimport PublicMenu from \"./PublicMenu\";\r\n\r\nfunction Navigation({ logOn, props }) {\r\n  return (\r\n    <>\r\n      <Nav\r\n        variant=\"tabs\"\r\n        defaultActiveKey=\"/home\"\r\n        className=\"justify-content-end\"\r\n      >\r\n        <Nav.Item>\r\n          <Link to={routes.home} className=\"nav-link\">\r\n            Home Page\r\n          </Link>\r\n        </Nav.Item>\r\n        {logOn ? <UserMenu /> : <PublicMenu />}\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    logOn: getStatusLogOn(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navigation);\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Navigation />\r\n    <main>{children}</main>\r\n  </>\r\n);\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../redux/status/statusSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  logOn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      logOn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logOn: getStatusLogOn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusLogOn } from \"../redux/status/statusSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  logOn,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      logOn ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logOn: getStatusLogOn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction ErrorMessage({ error }) {\r\n  return (\r\n    <Alert variant=\"danger\">\r\n      <Alert.Heading>Samsing wrong!</Alert.Heading>\r\n      <p>{error}</p>\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { Suspense, lazy, Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport routes from \"./routes\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserToken,\n  getErrorMessage,\n} from \"./redux/contacts/contactsSelectors\";\nimport { getUser } from \"./redux/contacts/contactsOperations\";\nimport { registrationError } from \"./redux/contacts/contactsActions\";\nimport { getStatusLogOn } from \"./redux/status/statusSelectors\";\nimport PublicRoutes from \"./components/PublicRoutes\";\nimport PrivateRoutes from \"./components/PrivateRoutes\";\nimport ErrorMessage from \"./components/AlertPage/ErrorMessage\";\n\nconst StartPage = lazy(() => import(\"./components/HomePage/StartPage\"));\nconst UserPage = lazy(() => import(\"./components/HomePage/UserPage\"));\nconst LoginPage = lazy(() => import(\"./components/LoginPage/LoginPage\"));\nconst RegistrationPage = lazy(() =>\n  import(\"./components/RegistrationPage/RegistrationPage\")\n);\nconst ContactList = lazy(() => import(\"./components/Contacts/ContactList\"));\nconst LogOut = lazy(() => import(\"./components/AlertPage/LogOut\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.token);\n  }\n  componentDidUpdate() {\n    if (this.props.message) {\n      return setTimeout(() => {\n        this.props.registrationError(null);\n      }, 3000);\n    }\n  }\n  render() {\n    const { logOn, message } = this.props;\n    return (\n      <>\n        <Layout>\n          <Suspense\n            fallback={\n              <div>\n                <Spinner animation=\"border\" />\n              </div>\n            }\n          >\n            <Switch>\n              <Route\n                path={routes.home}\n                exact\n                component={logOn ? UserPage : StartPage}\n              />\n              <PublicRoutes\n                path={routes.home}\n                exact\n                restricted\n                redirectTo={routes.contacts}\n                component={logOn ? UserPage : StartPage}\n              />\n              <PublicRoutes\n                path={routes.login}\n                restricted\n                redirectTo={routes.home}\n                component={LoginPage}\n              />\n              <PublicRoutes\n                path={routes.register}\n                restricted\n                redirectTo={routes.home}\n                component={RegistrationPage}\n              />\n              <PrivateRoutes\n                path={routes.contacts}\n                redirectTo={routes.login}\n                component={ContactList}\n              />\n              <PrivateRoutes\n                path={routes.logout}\n                redirectTo={routes.login}\n                component={LogOut}\n              />\n              <Redirect to={routes.home} />\n            </Switch>\n          </Suspense>\n        </Layout>\n        {message && <ErrorMessage error={message} />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: getUserToken(state),\n    logOn: getStatusLogOn(state),\n    message: getErrorMessage(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  getUser,\n  registrationError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  registrationSuccess,\r\n  loginSuccess,\r\n  getUserSuccess,\r\n  logoutSuccess,\r\n  registrationError,\r\n  loginError,\r\n  getUserError,\r\n  logoutError,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n} from \"../contacts/contactsActions\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  contacts: [],\r\n  error: null,\r\n  filter: \"\",\r\n};\r\n\r\nconst contactsReducer = createReducer(\r\n  { user: null, token: null, contacts: [], error: null, filter: \"\" },\r\n  {\r\n    [registrationSuccess]: (state, action) => ({\r\n      ...state,\r\n      ...action.payload,\r\n    }),\r\n    [registrationError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [loginSuccess]: (state, action) => ({ ...state, ...action.payload }),\r\n    [loginError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [getUserSuccess]: (state, action) => ({\r\n      ...state,\r\n      user: action.payload,\r\n    }),\r\n    [getUserError]: (state, action) => ({ ...state, ...action.payload }),\r\n    [logoutSuccess]: () => ({\r\n      ...initialState,\r\n    }),\r\n    [logoutError]: (state, action) => ({ ...state, error: action.payload }),\r\n    [addContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: [...state.contacts, action.payload],\r\n    }),\r\n    [getContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: action.payload,\r\n    }),\r\n    [addContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [getContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [removeContactsSuccess]: (state, action) => ({\r\n      ...state,\r\n      contacts: [\r\n        ...state.contacts.filter((contact) => {\r\n          return contact.id !== action.payload;\r\n        }),\r\n      ],\r\n    }),\r\n    [removeContactsError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [getFilterValue]: (state, action) => ({\r\n      ...state,\r\n      filter: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { statusLogOn, statusRemember } from \"../status/statusActions\";\r\n\r\nconst statusReducer = createReducer(\r\n  { logOn: false, remember: false },\r\n  {\r\n    [statusLogOn]: (state, action) => ({\r\n      ...state,\r\n      logOn: action.payload,\r\n    }),\r\n    [statusRemember]: (state, action) => ({\r\n      ...state,\r\n      remember: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default statusReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport statusReducer from \"./status/statusReducer\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst userBookConfig = {\r\n  key: \"userBook\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst statusConfig = {\r\n  key: \"status\",\r\n  storage,\r\n  whitelist: [\"remember\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    userBook: persistReducer(userBookConfig, contactsReducer),\r\n    status: persistReducer(statusConfig, statusReducer),\r\n  },\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  ],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate\n        loading={<Spinner animation=\"border\" />}\n        persistor={persistor}\n      >\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst statusLogOn = createAction(\"CHENGE_STATUS_LOGON\");\r\nconst statusRemember = createAction(\"CHENGE_STATUS_REMEMBER\");\r\n\r\nexport { statusLogOn, statusRemember };\r\n","const getUserToken = (state) => state.userBook.token;\r\nconst getUserInfo = (state) => state.userBook.user;\r\nconst getUserContacts = (state) => state.userBook.contacts;\r\nconst getContactsFilter = (state) => state.userBook.filter;\r\nconst getErrorMessage = (state) => state.userBook.error;\r\n\r\nexport {\r\n  getUserToken,\r\n  getUserInfo,\r\n  getUserContacts,\r\n  getContactsFilter,\r\n  getErrorMessage,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// User Action\r\n\r\nconst registrationRequest = createAction(\"userBook/registrationRequest\");\r\nconst registrationSuccess = createAction(\"userBook/registrationSuccess\");\r\nconst registrationError = createAction(\"userBook/registrationError\");\r\n\r\nconst loginRequest = createAction(\"userBook/loginRequest\");\r\nconst loginSuccess = createAction(\"userBook/loginSuccess\");\r\nconst loginError = createAction(\"userBook/loginError\");\r\n\r\nconst getUserRequest = createAction(\"userBook/getUserRequest\");\r\nconst getUserSuccess = createAction(\"userBook/getUserSuccess\");\r\nconst getUserError = createAction(\"userBook/getUserError\");\r\n\r\nconst logoutRequest = createAction(\"userBook/logoutRequest\");\r\nconst logoutSuccess = createAction(\"userBook/logoutSuccess\");\r\nconst logoutError = createAction(\"userBook/logoutError\");\r\n\r\n// Contacts Action\r\n\r\nconst addContactsRequest = createAction(\"userBook/addRequest\");\r\nconst addContactsSuccess = createAction(\"userBook/addSuccess\");\r\nconst addContactsError = createAction(\"userBook/addError\");\r\n\r\nconst getContactsRequest = createAction(\"contacts/getRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/getSuccess\");\r\nconst getContactsError = createAction(\"contacts/getError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst getFilterValue = createAction(\"FILTER_ITEM\");\r\n\r\nexport {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  getFilterValue,\r\n};\r\n","import {\r\n  registrationRequest,\r\n  registrationSuccess,\r\n  registrationError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getUserRequest,\r\n  getUserSuccess,\r\n  getUserError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contactsActions\";\r\nimport { statusLogOn } from \"../status/statusActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\n// axios.defaults.baseURL = \"https://lpj-tasker.herokuapp.com\";\r\n\r\nconst tokenSet = (token) =>\r\n  (axios.defaults.headers.common.Authorization = `Bearer ${token}`);\r\nconst tokenUnset = () => (axios.defaults.headers.common.Authorization = \"\");\r\n\r\nconst registrationUser = (user) => (dispatch) => {\r\n  dispatch(registrationRequest());\r\n  axios\r\n    .post(\"/users/signup\", user)\r\n    .then((response) => {\r\n      tokenSet(response.data.token);\r\n      dispatch(statusLogOn(true));\r\n      dispatch(registrationSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(registrationError(error.message)));\r\n};\r\n\r\nconst loginUser = (user) => (dispatch) => {\r\n  dispatch(loginRequest());\r\n  axios\r\n    .post(\"/users/login\", user)\r\n    .then((response) => {\r\n      tokenSet(response.data.token);\r\n      dispatch(statusLogOn(true));\r\n      dispatch(loginSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(loginError(error.message)));\r\n};\r\n\r\nconst getUser = (token) => (dispatch) => {\r\n  if (!token) {\r\n    dispatch(statusLogOn(false));\r\n    return;\r\n  }\r\n  tokenSet(token);\r\n  dispatch(statusLogOn(true));\r\n  dispatch(getUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then((response) => {\r\n      dispatch(getUserSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(getUserError(error.message)));\r\n};\r\n\r\nconst logoutUser = () => (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      tokenUnset();\r\n      dispatch(statusLogOn(false));\r\n      dispatch(logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(logoutError(error.message)));\r\n};\r\n\r\nconst addUserContact = (contact) => (dispatch) => {\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst getContacts = (token) => (dispatch) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  tokenSet(token);\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then((response) => {\r\n      dispatch(getContactsSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error.message)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactsSuccess(id));\r\n    })\r\n    .catch((error) => dispatch(removeContactsError(error.message)));\r\n};\r\n\r\nexport {\r\n  registrationUser,\r\n  loginUser,\r\n  getUser,\r\n  logoutUser,\r\n  addUserContact,\r\n  getContacts,\r\n  removeContact,\r\n};\r\n"],"sourceRoot":""}